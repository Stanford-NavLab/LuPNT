
.. _program_listing_file_include_lupnt_physics_orbit_state_converter.h:

Program Listing for File converter.h
====================================

|exhale_lsh| :ref:`Return to documentation for file <file_include_lupnt_physics_orbit_state_converter.h>` (``include/lupnt/physics/orbit_state/converter.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   #pragma once
   
   #include <functional>
   #include <map>
   #include <memory>
   #include <string>
   #include <tuple>
   
   #include "orbit_states.h"
   
   namespace lupnt {
   
     extern std::map<std::pair<OrbitStateRepres, OrbitStateRepres>,
                     std::function<Vec6(const Vec6 &, Real)>>
         absolute_conversions;
   
     extern std::map<std::pair<OrbitStateRepres, OrbitStateRepres>,
                     std::function<Vec6(const Vec6 &, const Vec6 &)>>
         relative_conversions;
   
     Vec6 ConvertOrbitState(const Vec6 &state_in, OrbitStateRepres repres_in,
                            OrbitStateRepres repres_out, Real GM);
   
     Vec6 ConvertOrbitState(const Vec6 &state_in_c, const Vec6 &state_in_d,
                            OrbitStateRepres repres_in_c, OrbitStateRepres repres_in_d,
                            OrbitStateRepres repres_out, Real GM);
   
     Ptr<OrbitState> ConvertOrbitStateRepresentation(const Ptr<OrbitState> &state_in,
                                                     OrbitStateRepres repres_out, Real GM);
   
     CartesianOrbitState ConvertOrbitStateFrame(const CartesianOrbitState state, const Real epoch,
                                                const Frame frame_out);
   
   }  // namespace lupnt
