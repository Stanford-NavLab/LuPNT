
.. _program_listing_file_include_lupnt_physics_body.h:

Program Listing for File body.h
===============================

|exhale_lsh| :ref:`Return to documentation for file <file_include_lupnt_physics_body.h>` (``include/lupnt/physics/body.h``)

.. |exhale_lsh| unicode:: U+021B0 .. UPWARDS ARROW WITH TIP LEFTWARDS

.. code-block:: cpp

   
   #pragma once
   
   #include <string>
   
   #include "lupnt/core/constants.h"
   #include "lupnt/physics/frame_converter.h"
   
   namespace lupnt {
   
     struct GravityField {
       int n_max, m_max;  // Maximum degree and order
       int n, m;          // Degree and order
   
       Real GM;  // Gravitational constant [km^3/s^2]
       Real R;   // Reference radius [km]
       MatX CS;  // Unnormalized coefficients
     };
   
     struct Body {
       NaifId id;
       std::string name;
   
       Real GM;
       Real R;
       int n, m;
   
       Frame fixed_frame;
       Frame inertial_frame;
   
       bool use_gravity_field;
       GravityField gravity_field;
   
       static Body Sun();
       static Body Earth(int n_max = 0, int m_max = 0, std::string gravity_file = "EGM96.cof");
       static Body Moon(int n_max = 0, int m_max = 0, std::string gravity_file = "grgm900c.cof");
       static Body Venus(int n_max = 0, int m_max = 0, std::string gravity_file = "MGN75HSAAP.cof");
       static Body Mars(int n_max = 0, int m_max = 0, std::string gravity_file = "GMM1.cof");
     };
   
     GravityField ReadHarmonicGravityField(const std::string& filename, int n, int m, bool normalized);
   }  // namespace lupnt
